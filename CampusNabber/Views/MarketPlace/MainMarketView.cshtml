@model CampusNabber.Models.MarketPlace
@{
    ViewBag.Title = "MainMarketView";
}


    <div class="row">
        <div class="col-md-9">

            <h2>Start Nabbin'</h2>
        </div>
        <div class="col-md-3">
            <h2><a href="@Url.Action("Create", "PostItems", new { userId = Model.user_name})" >Create Post</a></h2>
        </div>
    </div>


@Html.EditorForModel()
    @section Scripts {
    <script type="text/javascript">
        
       // var mainColor = '@Model.mainSchoolColor';




    </script>
    @*<script type="text/javascript" src="@Url.Content("~/Scripts/SchoolColor.js")"></script>*@
}


<div class="row">

    <div class="col-md-2">
        @using (Html.BeginForm("AddAdditionalSchools", "MarketPlace", FormMethod.Post, new {@id = "nonHover" }))
        {


            for(int i =0; i < Model.selectSchool.Count() ; i++)
            {
                @Html.CheckBoxFor(model=> model.selectSchool[i])
                @Html.DisplayFor(model => Model.otherSchools[i])
                
            }

            <input type="submit" value="Submit" />


        }

    </div>
    <div class="col-md-2">
        @{ 
            var schoolnames = "";
            for(int i =0; i < Model.school_names.Count; i ++)
            {
                schoolnames += Model.school_names[i];
                if (i + 1 != Model.school_names.Count)
                { schoolnames += ","; }

            }

        }
        <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                                 {
                                     Categories = Model.Categories,
                                     Posts = Model.Posts,
                                     CategoryNames = Model.CategoryNames,
                                     numPosts = Model.numPosts,
                                     displayRange = Model.displayRange,
                                     rangeFrom = Model.rangeFrom,
                                     rangeTo = Model.rangeTo,
                                     school_id = Model.school_id,
                                     schools= schoolnames,
                                     user_name = Model.user_name,
                                     userId = Model.userId,
                                     categoryToDisplay = 0,
                                     otherSchools = Model.otherSchools,
                                     school_names = Model.school_names

                                 })">
    @Model.CategoryNames[0]

</a>
        <table class="table table-borderless" id="displayTable">
            <tbody>
                @{
                    int j = 1;
                    for (int i = 0; i < Model.CategoriesToDisplay[0].Count; i++)
                    {
                        var element = Model.CategoriesToDisplay[0][i];
                        <tr>
                            <td>
                                <a class ="tenPoint" href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[0]@j">

                                </a>
                            </td>
                        </tr>
                        j++;
                    }

                }
            </tbody>
        </table>

       

    </div>



            <div class="col-md-2">
                <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                                         {
                                             Categories = Model.Categories,
                                             Posts = Model.Posts,
                                             CategoryNames = Model.CategoryNames,
                                             numPosts = Model.numPosts,
                                             displayRange = Model.displayRange,
                                             rangeFrom = Model.rangeFrom,
                                             rangeTo = Model.rangeTo,
                                             school_id = Model.school_id,
                                             schools = schoolnames,
                                             user_name = Model.user_name,
                                             userId = Model.userId,
                                             categoryToDisplay = 1,
                                             otherSchools = Model.otherSchools,
                                     school_names = Model.school_names
                })">
                    @Model.CategoryNames[1]
                </a>
                <table class="table table-borderless" id="displayTable">
                    <tbody>
                        @{
                            j = 1;
                            for (int i = 0; i < Model.CategoriesToDisplay[1].Count; i++)
                            {
                                var element = Model.CategoriesToDisplay[1][i];
                                <tr>
                                    <td>
                                        <a class="tenPoint" href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[1]@j">

                                        </a>
                                    </td>
                                </tr>
                                j++;
                            }

                        }
                    </tbody>
                </table>
               

            </div>
    <div class="col-md-2">
        <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                    {
                        Categories = Model.Categories,
                        Posts = Model.Posts,
                        CategoryNames = Model.CategoryNames,
                        numPosts = Model.numPosts,
                        displayRange = Model.displayRange,
                        rangeFrom = Model.rangeFrom,
                        rangeTo = Model.rangeTo,
                        school_id = Model.school_id,
                        schools= schoolnames,
                        user_name = Model.user_name,
                        userId = Model.userId,
                        categoryToDisplay = 2,
                        otherSchools = Model.otherSchools,
                                     school_names = Model.school_names
                })">
            @Model.CategoryNames[2]
        </a>

        <table class="table table-borderless" id="displayTable">
            <tbody>
                @{
                    j = 1;
                    for (int i = 0; i < Model.CategoriesToDisplay[2].Count; i++)
                    {
                        var element = Model.CategoriesToDisplay[2][i];
                        <tr>
                            <td>
                                <a class="tenPoint" href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[2]@j">

                                </a>
                            </td>
                        </tr>
                        j++;
                    }

                }
            </tbody>
        </table>
      

    </div>


            <div class="col-md-2">
                <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                                         {
                                             Categories = Model.Categories,
                                             Posts = Model.Posts,
                                             CategoryNames = Model.CategoryNames,
                                             numPosts = Model.numPosts,
                                             displayRange = Model.displayRange,
                                             rangeFrom = Model.rangeFrom,
                                             rangeTo = Model.rangeTo,
                                             school_id = Model.school_id,
                                             schools= schoolnames,
                                             user_name = Model.user_name,
                                             userId = Model.userId,
                                             categoryToDisplay = 3,
                                             otherSchools = Model.otherSchools,
                                     school_names = Model.school_names
                                         })">
                    @Model.CategoryNames[3]
                </a>
                <table class="table table-borderless" id="displayTable">
                    <tbody>
                        @{
                            j = 1;
                            for (int i = 0; i < Model.CategoriesToDisplay[3].Count; i++)
                            {
                                var element = Model.CategoriesToDisplay[3][i];
                                <tr>
                                    <td>
                                        <a class="tenPoint" href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[3]@j">

                                        </a>
                                    </td>
                                </tr>
                                j++;
                            }

                        }
                    </tbody>
                </table>

            </div>
    <div class="col-md-2 addSpace">
        
    </div>


</div>


<script>
    var data = function () { return @Html.Raw(Json.Encode(Model)); }();
    for(var i = 0; i < 4; i ++)
    {
        for(var j = 0; j < data.CategoriesToDisplay[i].length; j ++)
        {
            var element = data.CategoriesToDisplay[i][j];
            // alert(element.title + " " + element.price);
            debugger;
            var tar = $('#' + data.CategoryNames[i]+(j+1));
            var url = '@Url.Action("Details", "PostItems")?id=' + element.object_id;
            $(tar).attr("href", url);
            $(tar).text(setTag(element.school_name) + element.title + " $" + element.price);


        }


    }

    function setTag(school_name)
    {
        var token = "";
        if (school_name === "Eastern Washington University")
            token += "[EWU]";
        else if (school_name === "Washington State University")
            token += "[WSU]";
        else if (school_name === "Gonzaga")
            token += "[GU]";
        else if (school_name === "Whitworth")
            token += "[WU]";
        return token;
    }





</script>
<!--
<script>
    //the angular approach
    var data = function () { return @Html.Raw(Json.Encode(Model)); }();
    var myApp = angular.module('myApp', []);
    myApp.controller('categoryController', ['$scope', function ($scope) {
        $scope.market = data;
       // $scope.categories = data.CategoryNames;
       
    }]);
   
</script>
<body ng-app="myApp">
    <div ng-controller="categoryController">
        <div ng-repeat="category in market.CategoryNames" class="col-md-3">
            <p>{{category}}</p>
        </div>
    </div>
</body>

    -->