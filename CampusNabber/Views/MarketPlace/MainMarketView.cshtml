@model CampusNabber.Models.MarketPlace
@{
    ViewBag.Title = "MainMarketView";
}
<body>
    <div class="row">
        <div class="col-md-3">
            <h2>Start Nabbin'</h2>
        </div>
        <div class="col-md-9">
            <h2>@Model.SchoolToken</h2>
        </div>

    </div>

    @Html.EditorForModel()
    <!-- SEARCH FUNCTION
    <form method="get" action="@Url.Action("Create", "PostItemsController")">
        <input type="text" name="search" id="search" />
        <button type="submit">Search</button>
    </form>
    -->
    <a href="@Url.Action("Create", "PostItems", new
        {
            userId = @Model.user_name
        })">

        CREATE

    </a>
     

    <div class="row">


        <div class="col-md-3">

            <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                    {
                        Categories = Model.Categories,
                        Posts = Model.Posts,
                        CategoryNames = Model.CategoryNames,
                        numPosts = Model.numPosts,
                        displayRange = Model.displayRange,
                        rangeFrom = Model.rangeFrom,
                        rangeTo = Model.rangeTo,
                        school_name = Model.school_name,
                        user_name = Model.user_name,
                        categoryToDisplay = 0,
                        SchoolToken = Model.SchoolToken
                })">

                @Model.CategoryNames[0]

            </a>
            <table class="table table-borderless" id="displayTable">
                <tbody>
                    @{
                        int j = 1;
                        for (int i = 0; i < Model.Categories[0].Count; i++)
                        {
                            var element = Model.Categories[0][i];
                            <tr>
                                <td class="tenPoint">
                                    <a href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[0]@j">

                                    </a>
                                </td>
                            </tr>
                            j++;
                        }

                    }
                </tbody>
            </table>



        </div>



        <div class="col-md-3">
            <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                    {
                        Categories = Model.Categories,
                        Posts = Model.Posts,
                        CategoryNames = Model.CategoryNames,
                        numPosts = Model.numPosts,
                        displayRange = Model.displayRange,
                        rangeFrom = Model.rangeFrom,
                        rangeTo = Model.rangeTo,
                        school_name = Model.school_name,
                        user_name = Model.user_name,
                        categoryToDisplay = 1,
                        SchoolToken = Model.SchoolToken
                })">
                @Model.CategoryNames[1]
            </a>
            <table class="table table-borderless" id="displayTable">
                <tbody>
                    @{
                        j = 1;
                        for (int i = 0; i < Model.Categories[1].Count; i++)
                        {
                            var element = Model.Categories[1][i];
                            <tr>
                                <td class="tenPoint">
                                    <a href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[1]@j">

                                    </a>
                                </td>
                            </tr>
                            j++;
                        }

                    }
                </tbody>
            </table>


        </div>
        <div class="col-md-3">
            <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                    {
                        Categories = Model.Categories,
                        Posts = Model.Posts,
                        CategoryNames = Model.CategoryNames,
                        numPosts = Model.numPosts,
                        displayRange = Model.displayRange,
                        rangeFrom = Model.rangeFrom,
                        rangeTo = Model.rangeTo,
                        school_name = Model.school_name,
                        user_name = Model.user_name,
                        categoryToDisplay = 2,
                        SchoolToken = Model.SchoolToken
                })">
                @Model.CategoryNames[2]
            </a>
            <table class="table table-borderless" id="displayTable">
                <tbody>
                    @{
                        j = 1;
                        for (int i = 0; i < Model.Categories[2].Count; i++)
                        {
                            var element = Model.Categories[2][i];
                            <tr>
                                <td class="tenPoint">
                                    <a href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[2]@j">

                                    </a>
                                </td>
                            </tr>
                            j++;
                        }

                    }
                </tbody>
            </table>



        </div>


        <div class="col-md-3">
            <a class="sixteenPoint" href="@Url.Action("CategoryView", "MarketPlace", new
                    {
                        Categories = Model.Categories,
                        Posts = Model.Posts,
                        CategoryNames = Model.CategoryNames,
                        numPosts = Model.numPosts,
                        displayRange = Model.displayRange,
                        rangeFrom = Model.rangeFrom,
                        rangeTo = Model.rangeTo,
                        school_name = Model.school_name,
                        user_name = Model.user_name,
                        categoryToDisplay = 3,
                        SchoolToken = Model.SchoolToken
                })">
                @Model.CategoryNames[3]
            </a>
            <table class="table table-borderless" id="displayTable">
                <tbody>
                    @{
                        j = 1;
                        for (int i = 0; i < Model.Categories[3].Count; i++)
                        {
                            var element = Model.Categories[3][i];
                            <tr>
                                <td id="tenPoint">
                                    <a href="@Url.Action("Details", "PostItems", new { id = element.object_id })" id="@Model.CategoryNames[3]@j">

                                    </a>
                                </td>
                            </tr>
                            j++;
                        }

                    }
                </tbody>
            </table>

        </div>



    </div>


</body>
<script>
    var data = function () { return @Html.Raw(Json.Encode(Model)); }();
    for(var i = 0; i < 4; i ++)
    {
        for(var j = 0; j < data.Categories[i].length; j ++)
        {
            var element = data.Categories[i][j];
            // alert(element.title + " " + element.price);

            var tar = $('#' + data.CategoryNames[i]+(j+1));
            var url = '@Url.Action("Details", "PostItems")?id=' + element.object_id;
            $(tar).attr("href", url);
            $(tar).text(data.SchoolToken + " " + element.title + " $" + element.price);
            

        }


    }




</script>
<!--
<script>
    //the angular approach
    var data = function () { return @Html.Raw(Json.Encode(Model)); }();
    var myApp = angular.module('myApp', []);
    myApp.controller('categoryController', ['$scope', function ($scope) {
        $scope.market = data;
       // $scope.categories = data.CategoryNames;
       
    }]);
   
</script>
<body ng-app="myApp">
    <div ng-controller="categoryController">
        <div ng-repeat="category in market.CategoryNames" class="col-md-3">
            <p>{{category}}</p>
        </div>
    </div>
</body>

    -->
