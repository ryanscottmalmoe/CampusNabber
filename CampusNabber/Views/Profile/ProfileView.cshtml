@model CampusNabber.Models.ProfileModel

@{
    ViewBag.Title = "Profile";

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">

        var mainColor = '@(ViewBag.main_color)';
        var secondaryColor = '@(ViewBag.secondary_color)';
        var failed = '@TempData["FailedPost"]';
        if (failed == "true")
        {
            $(document).ready(function () {
                    $("#accountExists").modal();
            });
        }
         </script>
<link rel="stylesheet" href="~/Content/PostItem.css" type="text/css" />
<script type="text/javascript" src="@Url.Content("~/Scripts/ProfileView.js")"></script>
}



<h2>Profile</h2>
<br />
<br />


@*Making sure all the values don't return as null*@
@Html.HiddenFor(model => model.user.UserName)
@Html.HiddenFor(model => model.user.Email)
@Html.HiddenFor(model => model.school_name)
@Html.HiddenFor(model => model.Posts)

    <div class="row">
    <div class="col-md-2">
        <div class="container">
            <div class="btn-group-vertical">
                <button type="button" id="Posts" onclick="posts()" class="btn btn-primary btn-lg">Posts</button>
                <button type="button" id="Settings" onclick="settings()" class="btn btn-primary btn-lg">Settings</button>
            </div>
        </div>
    </div>


    @*Post items table*@
    <div class="col-md-8">
        <table class="table table-borderless" id="postItemTable">
            <thead>
                <tr>
                    <th>Manage</th>
                    <th>Title</th>
                    <th>Price</th>
                    <th>Category</th>
                    <th>Post Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var element in Model.Posts)
                {
                    <tr>
                        <td>
                            <a href="@Url.Action("Edit", "PostItems", new { id = element.object_id })">
                                Edit
                                <a href="@Url.Action("Delete", "PostItems", new { id = element.object_id})">
                                    Delete
                                    <a href="@Url.Action("Details", "PostItems", new { id = element.object_id})">
                                        View
                        </td>
                        <td>@Html.DisplayFor(m => element.title)</td>
                        <td>$@Html.DisplayFor(m => element.price)</td>
                        <td>@Html.DisplayFor(m => element.category)</td>
                        <td>@Html.DisplayFor(m => element.post_date)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <style>
        .col-md-10 {
            float: none;
        }

        .h5 {
            text-align: center;
        }
        h1, h2, h3 {
            margin-top: 0px;
            margin-bottom: 0px;
        }

        .panel-default > .panel-heading {
            height: 50px;
        }
        .input {
            width:100%;
        }
    </style>

    <div class="container" id="customContainer">
        <div class="col-md-8">
            <div class="panel-group" id="settingsSection" style="display:none">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h2>Profile Info</h2>
                    </div>
                    <div class="panel-body">

                        <div id="settingsSubSection">
                            @using (Html.BeginForm("UpdateUser", "Profile", FormMethod.Post))
                             {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                                <section class="form-field">
                                    <div id="editUsername">
                                        <label class="control-label">Username</label>
                                        @Html.EditorFor(model => model.user.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.user.UserName, "", new { @class = "text-danger" })
                                    </div>
                                    <img id="logoImage" src="~/Content/images/Transparent_logo_black.png" style="float:right; margin-right:50px; " alt="" height="200" width="200">

                                    <div id="editEmail">
                                        <label class="control-label">Email</label>
                                        @Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.user.Email, "", new { @class = "text-danger" })
                                    </div>
                                    <div id="editSchoolName">
                                        <label class="control-label">Category</label><br/>
                                        @Html.DropDownListFor(model => model.school_name, (SelectList)ViewBag.selectCategory, "Select Category", new { style = "height: 40px;" })
                                    </div>
                                    <br/>
                                    @Html.ActionLink("Change Password", "ChangePassword", "Manage", null, new { @class = "btn btn-warning btn-block" }) <br/>
                                    <input type="submit" value="Save" id="saveButton" class="submit btn blue-btn special-submit" />

                                </section>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
      

    </div>

</div>   


        @*Each of the forms for editing user information*@
        <div class="col-md-3" id="updateUserDiv" style="display:none;">
            @using (Html.BeginForm("UpdateUser", "Profile", FormMethod.Post))
            {


                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <section class="form-field">
                    <div id="editUsername" style="display: none;">
                        <label class="control-label">Username</label>
                        @Html.EditorFor(model => model.user.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.user.UserName, "", new { @class = "text-danger" })
                    </div>
                    <div id="editEmail" style="display: none">
                        <label class="control-label">Email</label>
                        @Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.user.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group" id="editSchoolName" style="display: none">
                        <label class="control-label">Category</label>
                        @Html.DropDownListFor(model => model.school_name, (SelectList)ViewBag.selectCategory, "Select Category", new { style = "height: 40px;" })
                    </div>
                    <input type="submit" value="Save" id="saveButton" style="display: none" class="submit btn blue-btn special-submit" />

                </section>
            }
        </div>






            @*Deactivate account button*@
        <div class="row" id="deactivateButton" style="display:none">
            <div class="col-md-1">
                <br />
                <button type="button" id="Deactivate" class="btn btn-danger btn-md" data-toggle="modal" data-target="#myModal">Deactivate Account</button>
            </div>
        </div>

        @*Username or Email Already Exists popup view
            Possibly make this alert dynamic by sending
        email or username as a string from the save button*@
        <div class="modal fade" id="accountExists" role="dialog">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Error</h4>
                    </div>
                    <div class="modal-body">
                        <p>Username or Email already exists. Please try again</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Ok</button>
                    </div>
                </div>
            </div>
        </div>

        @*Deactivate popup view*@
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Deactivate Account</h4>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to deactivate your account?</p>
                    </div>
                    <div class="modal-footer">
                        @Html.ActionLink("Yes", "Deactivate", "Profile", null, new { @class = "btn btn-default" })
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>







