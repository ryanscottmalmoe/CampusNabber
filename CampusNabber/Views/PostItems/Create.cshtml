@model CampusNabber.Models.PostItemModel



@{
    ViewBag.Title = "Create";
}
<div class="row">
    <div class="col-md-10">
        <h2>Create a New Post</h2>

        @using (Html.BeginForm("Create", "PostItems", FormMethod.Post,
                                        new { enctype = "multipart/form-data" }))
        {
            <div class="form-horizontal">

                @Html.HiddenFor(model => Model.username)
                @Html.HiddenFor(model => Model.school_name)

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="control-label col-md-2">Title</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Price</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Description</label>
                    <div class="col-md-10">

                        @Html.TextAreaFor(model => model.description, new { @rows = "5", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <label class="control-label col-md-2">Category</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(n => n.category, (SelectList)ViewBag.selectCategory, "Select Category",
                       new { style = "height: 40px;" })
                       
                    </div>
                </div>

                <div class="form-group">

                    <label class="control-label col-md-2">Sub Category</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(n => n.subCategory, new SelectList(string.Empty, "Value", "Text"),
                       "Select Sub Category", new { style = "height: 40px;" })
                    </div>
                </div>
                


                <div class="form-group">
                    <label class="control-label col-md-2">Images</label>

                    <div class="col-md-10">
                        <form action="demo_form.asp">
                            <input type="file" name="images" accept="image/*" multiple>
                        </form>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>
    <div class="col-md-2 addSpace red">

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@*
    <link rel="stylesheet" href="~/Content/School.css" type="text/css" />

    <script type="text/javascript">
            var mainColor = '@(ViewBag.main_color)';
            var secondaryColor = '@(ViewBag.secondary_color)';

    </script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/SchoolColor.js")"></script>
*@
    <script type="text/javascript">


        $(document).ready(function(){
            $("#category").change(function () {
                var element = $('#category');
                alert(element.val());
                $("#subCategory").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetSubCategory")', // we are calling json method
 
                    dataType: 'json',
 
                    data: { category: $("#category").val() }, 
                    // here we are get value of selected country and passing same value
                    //as inputto json method GetStates.
 
                    success: function (subCategory) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
 
                        $.each(subCategory, function (i, subCategory) {
                            $("#subCategory").append('<option value="' + subCategory.Value + '">' +  
                                 subCategory.Text + '</option>');                                                                                                
                            // here we are adding option for States
 
                        });
                    },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
        });
    </script>

}


