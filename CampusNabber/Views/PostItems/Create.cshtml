@model CampusNabber.Models.PostItemModel



@{
    ViewBag.Title = "Create";
}
<div class="row">
    <div class="col-md-10">
        <h2>Create a New Post</h2>

       @using (Html.BeginForm("Create", "PostItems", FormMethod.Post,
                                             new { enctype = "multipart/form-data" }))
       {
        
            <div class="form-horizontal" role="form">

                @Html.HiddenFor(model => Model.username)
                @Html.HiddenFor(model => Model.school_name)
                @Html.HiddenFor(model => model.social_flag)

                <hr />
                

                
                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                <div class="form-group">
                    <label class="control-label col-md-4">Title</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <label class="control-label col-md-4">Category</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(n => n.category, (SelectList)ViewBag.selectCategory, "Select Category",
                       new { style = "height: 40px;" })
                        @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group" id="subCategoryDiv" style="display:none">

                    <label class="control-label col-md-4">Sub Category</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(n => n.subCategory, new SelectList(string.Empty, "Value", "Text"),
                       "Select Sub Category", new { style = "height: 40px;" })
                        @Html.ValidationMessageFor(model => model.subCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="priceDiv" style="display:none">
                    <label class="control-label col-md-4">Price</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-4">Description</label>
                    <div class="col-md-8">

                        @Html.TextAreaFor(model => model.description, new { @rows = "5", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-4">Images</label>
                        <form action="demo_form.asp">
                            <div class="col-md-8">

                                <input type="file" name="image1" accept="image/*">
                                <input type="file" name="image2" accept="image/*">
                                <input type="file" name="image3" accept="image/*">
                                </div>
                        </form>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
           
                </div>
        }

    </div>
    <div class="col-md-2 addSpace red">

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@*
    <link rel="stylesheet" href="~/Content/School.css" type="text/css" />

    <script type="text/javascript">
            var mainColor = '@(ViewBag.main_color)';
            var secondaryColor = '@(ViewBag.secondary_color)';

    </script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/SchoolColor.js")"></script>
*@
    <script type="text/javascript">


        $(document).ready(function () {
            
            $("#category").change(function () {
                var element = $('#category');
                if (element.val().length > 0) {
                    if (element.val() === 'Eats and Drinks' || element.val() === 'On Campus' || element.val() === 'Jobs') {
                        $('#priceDiv').hide();
                        document.getElementById('social_flag').value = true;
                        //alert(document.getElementById('social_flag').value)
                    }
                    else {
                        $('#priceDiv').show();
                        document.getElementById('social_flag').value = false;
                        //alert(document.getElementById('social_flag').value)
                    }
                    $('#subCategoryDiv').show();
                    $("#subCategory").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetSubCategory")', // we are calling json method

                        dataType: 'json',

                        data: { category: $("#category").val() },
                        // here we are get value of selected country and passing same value
                        //as inputto json method GetStates.

                        success: function (subCategory) {
                            // states contains the JSON formatted list
                            // of states passed from the controller

                            $.each(subCategory, function (i, subCategory) {
                                $("#subCategory").append('<option value="' + subCategory.Value + '">' +
                                     subCategory.Text + '</option>');
                                // here we are adding option for States

                            });
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                    return false;
                }
                else {
                    $("#subCategory").empty();
                    $('#subCategoryDiv').hide();
                    
                }
            })

            $("#subCategory").change(function () {
                var sc = $('#subCategory');
                var c = $('#category');
                if(c.val() ==='For Sale')
                    if(sc.val() === 'Free')
                    {
                        $('#priceDiv').hide();
                        
                    }
            })

        });
    </script>

}


